@use 'mixins';
@use 'variables';

@mixin dropReceiving() {
    border-color: variables.$drop-list-dragging-border-color;
    border-style: dashed;
    background-color: variables.$drop-list-dragging-bg-color !important;
}

:host {
    display: grid;
    grid-template-areas: 'back links' 'back active';
    grid-template-rows: max-content minmax(32px, 1fr);
    grid-template-columns: max-content 1fr;
    grid-column-gap: 1rem;
    align-items: center;
    margin-bottom: 1rem;

    // .context-trigger {
    //     @include mixins.custom-icon-button();
    // }
    .back-button {
        grid-area: back;
        height: 100%;
        min-width: 40px;
        padding: 0;
        
        mat-icon {
            margin-right: 0;
        }

        &.receiving {
            @include dropReceiving;
        }
    }

    #current-dir-trigger {
        display: none;
    }
}

.links {
    grid-area: links;
    display: flex;
    font-size: 0.75rem;
    column-gap: 0.75rem;
    margin-left: -0.5rem;

    &__item {
        display: flex;
        align-items: center;
        color: rgba(0, 0, 0, 0.65);

        a {
            padding: 0.25rem 0.5rem;
            border-radius: 0.5rem;
            border: 1px solid transparent;

            &.receiving {
                @include dropReceiving;
            }
        }

        mat-icon {
            $size: 12px;
            width: $size;
            height: $size;
            line-height: $size;
        }
    }
}

.active {
    grid-area: active;
    font-size: 1.25rem;
    display: inline-grid;
    grid-template-columns: max-content 40px;
    grid-template-rows: 32px;
    place-items: center;
    column-gap: .5rem;

    .context-menu-button {
        @include mixins.custom-icon-button(40px, 20px);
    }
}

:host-context(.dragging) {
    .links__item a {
        background-color: rgba(0, 0, 0, 0.05);
    }

    .back-button {
        background-color: rgba(0, 0, 0, 0.05);
    }
}
